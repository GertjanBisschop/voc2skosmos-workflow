name: Publish Vocabulary Workflow

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  release:
    types: [published]

env:
  RESOURCE: voc
  VERSION: 0.0.1

jobs:
  csv-to-skos:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install pip dependencies
        run: pip install -r ./requirements.txt

      - name: Convert YARRRML to RML
        uses: vemonet/yarrrml-parser@v1.1
        with:
          input: ./rules/mappings.yarrr.yml
          output: mappings.rml.ttl

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /usr/bin/docker
          key: ${{ runner.os }}-docker-rmlmapper
          restore-keys: |
            ${{ runner.os }}-docker-
          
      - name: Run RML mapper
        uses: vemonet/rmlmapper-java@v4.9.0
        with:
          mapping: mappings.rml.ttl
          output: linked_data.rdf.ttl
          serialization: turtle
        env:
          JAVA_OPTS: "-Xmx6g"

      - name: Run skosify
        run: | 
          skosify linked_data.rdf.ttl -o ${{ env.RESOURCE }}.skos.ttl --label "example"

      - name: Upload vocabulary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RESOURCE }}.skos.ttl
          path: .

  publish:
    runs-on: ubuntu-latest
    needs: ['csv-to-skos']
    steps:
      - name: Download vocabulary
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.RESOURCE }}.skos.ttl
          path: .
      - name: Move to artifacts
        run: | 
          mkdir -p artifacts
          cp *.skos.ttl artifacts/.
      - name: Commit and push changes
        if: github.event_name == 'release'
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git add artifacts/${{ env.RESOURCE }}.skos.ttl
          git commit -m "Add generated ${{ env.RESOURCE }}.skos.ttl"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
