name: Publish Vocabulary Workflow

on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string
      namespace_label:
        required: true
        type: string
      namespace:
        required: true
        type: string

jobs:
  csv-to-skos:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install pip dependencies
        run: pip install skosify

      - name: Convert YARRRML to RML
        uses: vemonet/yarrrml-parser@v1.1
        with:
          input: ./rules/mappings.yarrr.yml
          output: mappings.rml.ttl
          
      - name: Run RML mapper
        uses: vemonet/rmlmapper-java@v4.9.0
        with:
          mapping: mappings.rml.ttl
          output: linked_data.rdf.ttl
          serialization: turtle
        env:
          JAVA_OPTS: "-Xmx6g"

      - name: Run skosify
        run: | 
          skosify linked_data.rdf.ttl -o voc.skos.ttl --label "${{ inputs.namespace_label}}" --namespace "${{ inputs.namespace}}" --set-modified

      - name: Upload vocabulary
        uses: actions/upload-artifact@v4
        with:
          name: voc.skos.ttl
          path: .

  publish:
    runs-on: ubuntu-latest
    needs: ['csv-to-skos']
    steps:
      - name: Download vocabulary
        uses: actions/download-artifact@v4
        with:
          name: voc.skos.ttl
          path: .
      - name: Move to artifacts
        run: | 
          mkdir -p artifacts
          cp *.skos.ttl artifacts/.
      - name: Commit and push changes
        if: github.event_name == 'release'
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git add artifacts/voc.skos.ttl
          git commit -m "Add generated voc.skos.ttl"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
